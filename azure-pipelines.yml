# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

# - script: |
#     ls -lt /
#     ls -lt $(System.DefaultWorkingDirectory)/
#   displayName: 'ls -lt'

# - script: |
#     docker build -t gremito/lamp .
#     docker run -d -p 80:80 gremito/lamp

#   displayName: 'build and run'

# - script: |
#     curl -i http://127.0.0.1:80/

#   displayName: 'test'

- script: |
    mkdir $(System.DefaultWorkingDirectory)/bin
    echo 'Hello World!!\n\nver 1.0.0' >> $(System.DefaultWorkingDirectory)/bin/share.txt
    cat $(System.DefaultWorkingDirectory)/bin/share.txt

    # # cp -r $(System.DefaultWorkingDirectory)/bin $(Build.ArtifactStagingDirectory)
    # cp -r $(System.DefaultWorkingDirectory)/bin $(Pipeline.Workspace)
    # cd $(Pipeline.Workspace)
    # pwd

  displayName: 'Create share.txt'


# - publish: $(System.DefaultWorkingDirectory)/bin/centos-php7-lamp
#   artifact: centos-php7-lamp

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: 'b-centos-php7-lamp'
    publishLocation: 'Container'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(Pipeline.Workspace)
    artifactName: 'p-centos-php7-lamp'
